version: "3.7"

services:
  mysql:
    platform: linux/amd64
    build:
      context: ./.Docker/mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - docker_data:/var/lib/mysql
    networks:
      - docker_network

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=${DB_PASSWORD}
    networks:
      - docker_network
    depends_on:
      - mysql

  nginx:
    build:
      context: ./.Docker/nginx
    volumes_from:
      - app
    volumes:
      - ./.Docker/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    networks:
      - docker_network
    depends_on:
      # - frontend
      - app

  app:
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
    build:
      dockerfile: ./.Docker/php/Dockerfile
    external_links:
      - nginx:packages.test
    volumes:
      - ./:/var/www
      - /var/www/.Docker
      - /var/app/ssl
      - ./.Docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - docker_network

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - '${FORWARD_MAILHOG_PORT:-1025}:1025'
      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    networks:
        - docker_network
  

networks:
  docker_network:
    driver: bridge

volumes:
  docker_data: