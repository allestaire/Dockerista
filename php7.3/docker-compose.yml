version: '3.5'
services:
  #MySQL Service
  db:
    platform: linux/amd64
    image: mysql:5.6
    # restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - docker_data:/var/lib/mysql/
      - ./.Docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - docker_network

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_HOST=db
      - PMA_USER=root
      - PMA_PASSWORD=${DB_PASSWORD}
    networks:
      - docker_network

  #PHP Service
  app:
    build:
      context: .
      dockerfile: ./.Docker/php/Dockerfile
    platform: linux/amd64
    restart: unless-stopped
    external_links:
      - webserver:anyway-pay.test
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./.Docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./.Docker/php/etc/ImageMagick-6/policy.xml:/etc/ImageMagick-6/policy.xml
    networks:
      - docker_network
    depends_on:
      - db
  

  #Nginx Service
  webserver:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./.Docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./.Docker/ssl:/etc/nginx/ssl
    networks:
      - docker_network
    depends_on:
      - db
      - app

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - '${FORWARD_MAILHOG_PORT:-1025}:1025'
      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    networks:
      - docker_network

#Docker Networks
networks:
  docker_network:
    name: docker_network
    driver: bridge

#Volumes
volumes:
  docker_data:
    driver: local
